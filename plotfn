import plotly.graph_objects as go
from plotly.subplots import make_subplots

# Define the flowcharts or slide content
slides = [
    {"title": "Flowchart 1", "data": [1, 2, 3, 4], "description": "Introduction to Flowchart 1"},
    {"title": "Flowchart 2", "data": [4, 3, 2, 1], "description": "Introduction to Flowchart 2"},
    {"title": "Flowchart 3", "data": [1, 3, 2, 4], "description": "Advanced Flowchart Analysis"}
]

# Initial figure setup
fig = go.Figure()

# Add initial plot data (first flowchart)
fig.add_trace(go.Scatter(x=[1, 2, 3, 4], y=slides[0]['data'], mode='lines+markers'))

# Update layout
fig.update_layout(
    title=slides[0]['title'],
    annotations=[dict(text=slides[0]['description'], xref="paper", yref="paper", showarrow=False, x=0.5, y=1.15, font_size=15)]
)

# Define callback function for interactivity
def update_plot(click_data):
    slide_index = (click_data['points'][0]['pointIndex'] + 1) % len(slides)  # Circular transition between slides
    selected_slide = slides[slide_index]

    # Update trace with new data
    fig.data[0].y = selected_slide['data']

    # Update title and annotations
    fig.update_layout(
        title=selected_slide['title'],
        annotations=[dict(text=selected_slide['description'], xref="paper", yref="paper", showarrow=False, x=0.5, y=1.15, font_size=15)]
    )

    fig.show()

# Add event listener for clicks on the figure
fig.update_traces(marker=dict(size=20, symbol='circle'), selector=dict(mode='markers'))

# Add JavaScript handler for the clicks
fig.update_layout(clickmode='event+select')

# Show the initial figure
fig.show()

# Add click event handling
fig.on_click(update_plot)





def update_plot_on_hover(hover_data):
    slide_index = hover_data['points'][0]['pointIndex'] % len(slides)
    selected_slide = slides[slide_index]

    # Update trace and annotations on hover
    fig.data[0].y = selected_slide['data']
    fig.update_layout(
        title=selected_slide['title'],
        annotations=[dict(text=selected_slide['description'], xref="paper", yref="paper", showarrow=False, x=0.5, y=1.15, font_size=15)]
    )

    fig.show()

fig.update_layout(hovermode='x')
fig.on_hover(update_plot_on_hover)
fig.show()