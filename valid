import pandas as pd

class FileValidator:
    def __init__(self, file_path):
        self.file_path = file_path
        self.df = pd.read_csv(self.file_path)  # Load the file
        self.required_columns = self.set_required_columns()

    def set_required_columns(self):
        """
        To be implemented by subclasses to specify required columns.
        """
        raise NotImplementedError("Subclasses should implement this method to specify required columns.")

    def is_valid(self):
        missing_columns = set(self.required_columns) - set(self.df.columns)
        if not missing_columns:
            return True
        else:
            self.error_notification(missing_columns)
            return False

    def error_notification(self, missing_columns):
        raise ValueError(f"Invalid file. Missing required columns: {missing_columns}")

class MissionFileValidator(FileValidator):
    def set_required_columns(self):
        return [
            'V2500', 'Time', 'Mission Segment', 'Mach No.', 'DTAMB', 'Rating',
            'Thrust', 'P3_const', 'T3_const', 'SPHUM_const', 'SPHUM', 
            'FAR4', 'WF', 'Actual Time'
        ]

class UtilizationFileValidator(FileValidator):
    def set_required_columns(self):
        return [
            'missions', 'engine name'
        ]

class ForecastFileValidator(FileValidator):
    def set_required_columns(self):
        return [
            'year', 'deliveries', 'EFH per engine'
        ]

def validate_file(file_path, file_type):
    validator_mapping = {
        'mission': MissionFileValidator,
        'utilization': UtilizationFileValidator,
        'forecast': ForecastFileValidator,
    }
    
    validator_class = validator_mapping.get(file_type.lower())
    if not validator_class:
        raise ValueError(f"Unknown file type '{file_type}' specified.")
    
    validator = validator_class(file_path)
    
    if validator.is_valid():
        print(f"{file_type.capitalize()} file is valid.")
    else:
        print(f"{file_type.capitalize()} file is invalid.")

if __name__ == "__main__":
    # Example usage
    validate_file("path_to_mission_file.csv", "mission")
    validate_file("path_to_utilization_file.csv", "utilization")
    validate_file("path_to_forecast_file.csv", "forecast")